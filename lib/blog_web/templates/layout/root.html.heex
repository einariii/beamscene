<!DOCTYPE html>
<html class="" lang="en">
    <head>
      <meta charset="utf-8"/>
      <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
      <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
      <meta name="csrf-token" content={csrf_token_value()}>
      <%= live_title_tag assigns[:page_title] || "Blog", suffix: " · Phoenix Framework" %>
      <link phx-track-static rel="stylesheet" href={Routes.static_path(@conn, "/assets/app.css")}/>
      <script defer phx-track-static type="text/javascript" src={Routes.static_path(@conn, "/assets/js/app.js")}></script>
    </head>

    <body class="font-medium text-jet bg-gradient-to-r from-crayolapink to-tiffanyblue mix-blend-color-burn p-10">
          <section class="grid grid-cols-12 grid-rows-5 grid-flow-row">

            <div class="sm:col-span-2 md:col-span-4 lg:col-span-6 row-span-1">
              <section>
                <p class="sm:text-xl md:text-3xl lg:text-7xl pt-8 pb-2 font-jura tracking-widest"> B E A M  s c e n e </p>
                <hr width="144%" color="licorice" size="50px" align="left" />
                <p class="sm:text-sm md:text-lg lg:text-2xl px-8 pb-4 font-kosugi"> Life in the Elixir & Erlang ecosystem. </p>
              </section>
            </div>

            <div class="col-span-1 row-span-1 pt-10 mx-40">
              <.form let={f} for={@conn} method={"get"} action={Routes.posts_path(@conn, :index)}>
                <%= text_input f, :title, class: ["bg-lavender border-jet"] %>
                <%= error_tag f, :title %>
                <%= submit "Search" %>
              </.form>
            </div>

            <div class="sm:invisible md:invisible lg:visible col-span-2 row-span-1 col-start-10 pt-10 pl-20">
                <img src={Routes.static_path(@conn, "/images/beamscene_dots.svg")} alt="Beam Scene logo" width="200" height="300">
            </div>

          <div class="row-start-2 pt-60">
            <section class="text-jet text-2xl -my-40">
                <ul>
                  <li class="py-2 hover:text-tiffanyblue">
                    <a href="/about">ABOUT</a>
                  </li>
                  <li class="py-2 hover:text-tiffanyblue">
                    <a href="/posts">POSTS</a>
                  </li>
                  <li class="py-2 hover:text-tiffanyblue">
                    <a href="/tags">TAGS</a>
                  </li>
                  <%= if @current_user do %>
                  <li class="py-2 hover:text-tiffanyblue">
                    <span><%= link "LOGOUT", to: Routes.user_session_path(@conn, :delete), method: :delete %></span>
                  </li>
                  <% else %>
                  <li class="py-2 hover:text-tiffanyblue">
                    <a href="/users/log_in">LOGIN</a>
                  </li>
                  <% end %>
                </ul>
            </section>
          <div class ="h-24"></div></div>

          <div class="col-span-6 row-span-4 -my-40 mx-20">
              <%= @inner_content %>
          </div>

          <div class="sm:invisible md:invisible lg:visible absolute col-span-1">
            <div class="font-extralight text-left text-jet font-jura">
              <marquee width="70%" direction="up" height="1000px">
              1. The system must be able to handle very large numbers of concurrent activities.<br><br>
              2. Actions must be performed at a certain point in time or within a certain time.<br><br>
              3. Systems may be distributed over several computers.<br><br>
              4. The system is used to control hardware.<br><br>
              5. The software systems are very large.<br><br>
              6. The system exhibits complex functionality such as, feature interaction.<br><br>
              7. The systems should be in continuous operation for many years.<br><br>
              8. Software maintenance (reconfiguration, etc) should be performed without stopping the system.<br><br>
              9. There are stringent quality, and reliability requirements.<br><br>
              10. Fault tolerance both to hardware failures, and software errors, must be provided.<br><br>

              Bjarne Däcker. Concurrent functional programming for telecommunications: A case study of technology introduction. November 2000.
              Licentiate Thesis.
              </marquee>
            </div>
          </div>

        </section>
    </body>

<footer class="footer text-lg">a MINK AL FREDO production.</footer>
</html>
